import Head from 'next/head'
import { useEffect, useState } from 'react'

function sortData(data, key, s) {
  const unsorted = [...data]
  function compareScores(a, b) {
    if (a.scores[key] > b.scores[key]) return -1*s;
    if (a.scores[key] < b.scores[key]) return s;
    return 0;
  }
  function compareKeys(a, b) {
    if (a[key] > b[key]) return -1*s;
    if (a[key] < b[key]) return s;
    return 0;
  }
  if(Object.keys(unsorted[0].scores).includes(key)) return unsorted.sort(compareScores)
  return unsorted.sort(compareKeys)
}

function Row({ rdata, i, filter }) {
  const { id, player_name, team } = rdata
  const { fpl, md, xG, odds, variance } = rdata.scores

  return (
    <tr className={`${filter.test(player_name) ? '' : 'hidden'} border-y border-slate-700`}>
      <td className='text-center'>{i}</td>
      <td className='text-left'>
        <a href={`https://fantasy.premierleague.com/entry/${id}/history`}
           title={id} rel="noreferrer" target='_blank'>{player_name}</a>
        </td>
      <td>{fpl}</td>
      <td>{md}</td>
      <td>{odds}</td>
      <td>{xG}</td>
      <td className='text-center ...'>{variance}</td>
    </tr>
  )
}

function Table({ mdata, setSortOpts, filter }) {
  
  const mappedKeys = { nr: '#',
                    player_name: 'Manager',
                    fpl: 'FPL',
                    md: 'MD',
                    odds: 'Odds',
                    xG: 'xG',
                    variance: 'Ïƒ2'
                  }

  function handleClick(e) {
    setSortOpts((opts) => {
      const order = opts.key !== e.target.id ? { order: 1 } : { order: opts.order*-1 } 
      return {...opts, key: e.target.id, ...order }
    })
  }

  return (
    <table className="relative text-right border border-slate-700 ...">
      <thead>
        <tr className='text-center hover:cursor-pointer'>
          {Object.keys(mappedKeys).map((k,i,arr) => {
            return <th className="px-2 py-1 border border-slate-600 ..." key={k} id={k} onClick={handleClick}>{mappedKeys[k]}</th>
            })}
        </tr>
      </thead>
      <tbody>
        {mdata.map((entry, i) => {
            return <Row key={entry.id} rdata={entry} i={i+1} filter={filter}/>
        })}
      </tbody>
    </table>
  )
}

export default function Home() {
  const [data, setData] = useState([])
  const [sortOpts, setSortOpts] = useState( { key: 'fpl', order: 1 } )
  const [filter, setFilter] = useState(new RegExp('', 'i'))

  function handleChange(e) {
    setFilter(new RegExp(e.target.value, 'i'))
  }

  useEffect(() => {
    fetch('/api/scores')
      .then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
    
        return response.json();
      })
      .then((json) => {
        setData(json);
      })
  },[])

  useEffect(() => {
    let sorted
    if(data.length > 0) {
      sorted = sortData(data, sortOpts.key, sortOpts.order);
      setData(sorted);
  }
  },[sortOpts.order, sortOpts.key])

  return (
    <div>
      <Head>
        <title>Analytics and friends</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='w-fit mx-auto flex flex-col justify-center'>
        <h1 className="text-center text-xl my-6 font-blue-200 ...">
        Analytics Elite 64 (D1, D2) + #Elite64 + #elite64NOR
        </h1>
        <input className='w-1/3 mb-1 ml-0 text-lg bg-slate-700 focus:bg-slate-600 focus:outline-0 shadow-inner shadow-gray-800/100' onChange={handleChange}/>
        <Table mdata={data} setSortOpts={setSortOpts} filter={filter}/>
      </main>
      <footer>
        <p></p>
      </footer>
    </div>
  )
}